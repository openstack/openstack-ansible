{%- set network_vlan_ranges = [] %}
{%- set network_vxlan_ranges = [] %}
{%- set network_flat_networks = [] %}
{%- set network_mappings = [] %}
{%- set network_types = [] %}
{%- set used_interfaces = [] %}
{%- for net in provider_networks %}
  {%- if net.network.type == "vlan" %}
    {%- if "vlan" not in network_types %}
      {%- if network_types.append("vlan") %}{%- endif %}
    {%- endif %}
    {%- set vlan_pair = [] %}
    {%- if vlan_pair.append(net.network.net_name) %}{%- endif %}
    {%- if vlan_pair.append(net.network.range) %}{%- endif %}
    {%- if vlan_pair|join(':') not in network_vlan_ranges%}
      {%- if network_vlan_ranges.append(vlan_pair|join(':')) %}{%- endif %}
    {%- endif %}
  {%- elif net.network.type == "vxlan" %}
    {%- if "vxlan" not in network_types %}
      {%- if network_types.append("vxlan") %}{%- endif %}
    {%- endif %}
    {%- if net.network.range not in network_vxlan_ranges %}
      {%- if network_vxlan_ranges.append(net.network.range) %}{%- endif %}
    {%- endif %}
  {%- elif net.network.type == "flat" %}
    {%- if "flat" not in network_types %}
      {%- if network_types.append("flat") %}{%- endif %}
    {%- endif %}
    {%- if net.network.net_name not in network_flat_networks %}
      {%- if network_flat_networks.append(net.network.net_name) %}{%- endif %}
    {%- endif %}
  {%- endif %}
  {% if net.network.type != 'raw' and net.network.type != 'vxlan' %}
    {%- set map_pair = [] %}
    {%- if 'net_name' in net.network %}
      {%- if map_pair.append(net.network.net_name) %}{%- endif %}
    {%- endif %}
    {%- if is_metal == true %}
      {%- if map_pair.append(net.network.container_bridge) %}{%- endif %}
    {%- else %}
      {%- if map_pair.append(net.network.container_interface) %}{%- endif %}
    {%- endif %}
    {%- if map_pair|join(':') not in network_mappings %}
      {%- if network_mappings.append(map_pair|join(':')) %}{%- endif %}
    {%- endif %}
  {%- endif %}
{%- endfor %}

[ml2]
type_drivers = flat,vlan,vxlan,local
tenant_network_types = {{ network_types|join(',') }}
mechanism_drivers = linuxbridge,l2population


{% if network_flat_networks %}
[ml2_type_flat]
flat_networks = {{ network_flat_networks|join(',') }}
{% endif %}


{% if network_vlan_ranges %}
[ml2_type_vlan]
network_vlan_ranges = {{ network_vlan_ranges|join(',') }}

[vlans]
tenant_network_type = vlan
network_vlan_ranges = {{ network_vlan_ranges|join(',') }}
{% endif %}


{% if network_vxlan_ranges %}
[ml2_type_vxlan]
vxlan_group = {{ neutron_vxlan_group|default('') }}
vni_ranges = {{ network_vxlan_ranges|join(',') }}


{% if tunnel_address is defined %}
[vxlan]
enable_vxlan = True
vxlan_group = {{ neutron_vxlan_group|default('') }}
{% if is_metal == true %}
{% set on_metal_tunnel_bridge = 'ansible_' + tunnel_bridge|replace('-', '_') %}
local_ip = {{ hostvars[inventory_hostname][on_metal_tunnel_bridge]['ipv4']['address'] }}
{% else %}
local_ip = {{ tunnel_address }}
{% endif %}
l2_population = True
{% endif %}
{% endif %}


[agent]
tunnel_types = vxlan
## VXLAN udp port
# This is set for the vxlan port and while this
# is being set here it's ignored because 
# the port is assigned by the kernel
vxlan_udp_port = 4789


{% if network_mappings is defined %}
[linux_bridge]
physical_interface_mappings = {{ network_mappings|join(',') }}
{% endif %}


[l2pop]
agent_boot_time = 180

[securitygroup]
enable_security_group = True
enable_ipset = True
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
