---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Rackspace Cloud Details
# UK accounts: https://lon.identity.api.rackspacecloud.com/v2.0
rackspace_cloud_auth_url: https://identity.api.rackspacecloud.com/v2.0
rackspace_cloud_tenant_id: SomeTenantID
rackspace_cloud_username: SomeUserName
rackspace_cloud_password: SomeUsersPassword
rackspace_cloud_api_key: SomeAPIKey


## Rabbit Options
rabbitmq_password:
rabbitmq_cookie_token:


## Tokens
memcached_encryption_key:


## Container default user
container_openstack_password:


## Galera Options
mysql_root_password:

# Defined in group_vars/galera, but can overriden here.
# galera_wait_timeout: 3600


## Keystone Options
keystone_container_mysql_password:
keystone_auth_admin_token:
keystone_auth_admin_password:
keystone_service_password:
# Set the "public_endpoint" var in keystone.conf
#keystone_public_endpoint:
#
# uncomment the following if using ldap
#keystone_ldap: True
#keystone_ldap_identity_driver: keystone.identity.backends.ldap.Identity
#keystone_ldap_domain_config_dir: /etc/keystone/domains

## Cinder Options
cinder_container_mysql_password:
cinder_service_password:
cinder_v2_service_password:


## Glance Options
# To disable Glance's cache, remove the +cachemanagement portion of default
# value below.
#glance_flavor: keystone+cachemanagement
# Set default_store to "swift" if using Cloud Files or swift backend
glance_default_store: file
glance_container_mysql_password:
glance_service_password:
glance_swift_store_auth_address: "{{ rackspace_cloud_auth_url }}"
glance_swift_store_user: "{{ rackspace_cloud_tenant_id }}:{{ rackspace_cloud_username }}"
glance_swift_store_key: "{{ rackspace_cloud_password }}"
glance_swift_store_container: SomeContainerName
glance_swift_store_region: SomeRegion
# Set the glance swift_store large object variables in MB
#glance_swift_store_large_object_size: 5120
#glance_swift_store_large_object_chunk_size: 200
# `internalURL` will cause glance to speak to swift via ServiceNet, use
# `publicURL` to communicate with swift over the public network
glance_swift_store_endpoint_type: internalURL
glance_notification_driver: noop
# Set glance cache size in bytes, should be less than container size. Defaults to 10GiB
#glance_image_cache_max_size: 4294967296

## Heat Options
heat_stack_domain_admin_password:
heat_container_mysql_password:
### THE HEAT AUTH KEY NEEDS TO BE 32 CHARACTERS LONG ##
heat_auth_encryption_key:
### THE HEAT AUTH KEY NEEDS TO BE 32 CHARACTERS LONG ##
heat_service_password:
heat_cfn_service_password:


## Horizon Options
horizon_container_mysql_password:
horizon_secret_key:

## MaaS Options
# Set maas_auth_method to 'token' to use maas_auth_token/maas_api_url
# instead of maas_username/maas_api_key
maas_auth_method: password
maas_auth_url: "{{ rackspace_cloud_auth_url }}"
maas_username: "{{ rackspace_cloud_username }}"
maas_api_key: "{{ rackspace_cloud_api_key }}"
maas_auth_token: some_token
maas_api_url: https://monitoring.api.rackspacecloud.com/v1.0/{{ rackspace_cloud_tenant_id }}
maas_notification_plan: npManaged
# By default we will create an agent token for each entity, however if you'd
# prefer to use the same agent token for all entities then specify it here
#maas_agent_token: some_token
maas_target_alias: public0_v4
maas_scheme: https
# Override scheme for specific service remote monitor by specifying here: E.g.
# maas_nova_scheme: http
maas_keystone_user: maas
maas_keystone_password:
maas_rabbitmq_user: maas_user
maas_rabbitmq_password:
# Check this number of times before registering state change
maas_alarm_local_consecutive_count: 3
maas_alarm_remote_consecutive_count: 1
# Period and timeout times (seconds) for a check
# Timeout must be less than period
maas_check_period: 60
maas_check_timeout: 30
maas_monitoring_zones:
  - mzdfw
  - mziad
  - mzord
  - mzlon
  - mzhkg
# Specify the maas_fqdn_extension, defaults to empty string.
# This will be appended to the inventory_name of a host for MaaS purposes.
# The inventory name + maas_fqdn_extension must match the entity name in MaaS
# maas_fqdn_extension: .example.com
# Set the following to skip creating alarms for this device
#maas_excluded_devices: ['xvde']
# Set the threshold for filesystem monitoring when you are not specifying specific filesystems.
maas_filesystem_warning_threshold: 80.0
maas_filesystem_critical_threshold: 90.0
# Explicitly set the filesystems to set up monitors/alerts for.
# NB You can override these in rpc_user_config per device using "maas_filesystem_overrides"
#maas_filesystem_monitors:
#  - filesystem: /
#    threshold: 90.0
#  - filesystem: /boot
#    threshold: 90.0
rabbitmq_queued_messages_excluding_notifications_threshold: 100
# queued messages per check period (default period = 60s)
rabbitmq_queue_growth_rate_threshold: 15


# mysql monitoring thresholds
mysql_connection_critical_threshold: 90.0
mysql_connection_warning_threshold: 80.0

## Neutron Options
neutron_container_mysql_password:
neutron_service_password:


## Nova Options
# This defaults to KVM, if you are deploying on a host that is not KVM capable
# change this to your hypervisor type: IE "qemu", "lxc".
# nova_virt_type: kvm
# nova_cpu_allocation_ratio: 2.0
# nova_ram_allocation_ratio: 1.0
nova_container_mysql_password:
nova_metadata_proxy_secret:
nova_ec2_service_password:
nova_service_password:
nova_v3_service_password:
nova_s3_service_password:

# Uncomment "nova_console_endpoint" to define a specific nova console URI or
# IP address this will construct the specific proxy endpoint for the console.
# nova_console_endpoint: console.company_domain.name


## RPC Support
rpc_support_holland_password:
# rpc_support_holland_branch: defaults to release tag: v1.0.10

## Elasticsearch Options
# elasticsearch_heap_size_mb: 256

## Logstash Options
# logstash_heap_size_mb: 128

## Kibana Options
kibana_password:

# Swift Options:
swift_service_password:
swift_container_mysql_password:
# Once the swift cluster has been setup DO NOT change these hash values!
swift_hash_path_suffix:
swift_hash_path_prefix:
# This will allow all users to create containers and upload to swift if set to True
swift_allow_all_users: False
# The dispersion user is for swift-dispersion-report
swift_dispersion_user: dispersion
swift_dispersion_password:

# This variables is used to set haproxy's timeout client and timeout server
# values, they are set in the main config file and are only used by services
# that don't set their own values (default: 90s)
#haproxy_timeout: 90s


## Repositories for pinned / extra repos. Adding any of these variables will override the default
## and set the repository for the given services to what has been defined.
# mariadb_repo_url: "http://mirror.rackspace.com/rackspaceprivatecloud/mirror/mariadb/mariadb-5.5.41/repo/ubuntu/"
# elasticsearch_repo_url: "http://packages.elasticsearch.org/elasticsearch/1.2/debian"
# logstash_repo_url: "http://packages.elasticsearch.org/logstash/1.4/debian"
# rsyslog_repo_url: "ppa:adiscon/v8-stable"
# raxmon_repo_url: "http://stable.packages.cloudmonitoring.rackspace.com/ubuntu-14.04-x86_64"


## Additional pinning generator that will allow for more packages to be pinned as you see fit.
## All pins allow for the a package and version to be defined. Be careful using this as versions
## are always subject to change and updates regarding security will become your problem from this
## point on.
# apt_pinned_packages:
#   - { package: "lxc", version: "1.0.7-0ubuntu0.1" }
#   - { package: "libvirt-bin", version: "1.2.2-0ubuntu13.1.9" }
#   - { package: "logstash", version: "1.4.2-1-2c0f5a1" }
#   - { package: "logstash-contrib", version: "1.4.2-1-efd53ef" }
#   - { package: "elasticsearch", version: "1.2.4" }

## Environment variable settings
# This allows users to specify the additional environment variables to be set
# which is useful in setting where you working behind a proxy. If working behind
# a proxy It's important to always specify the scheme as "http://". This is what
# the underlying python libraries will handle best. This proxy information will be
# placed both on the hosts and inside the containers.

## Example environment variable setup:
# proxy_env_url: http://username:pa$$w0rd@10.10.10.9:9000/
# no_proxy_env: "localhost,127.0.0.1,{% for host in groups['all_containers'] %}{{ hostvars[host]['container_address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
# global_environment_variables:
#   HTTP_PROXY: "{{ proxy_env_url }}"
#   HTTPS_PROXY: "{{ proxy_env_url }}"
#   NO_PROXY: "{{ no_proxy_env }}"
